version: '3'
services:
    mongo:
        image: 'mongo:latest'
        deploy:
            resources:
                limits:
                    cpus: "0.2"
                    memory: 100M
            restart_policy:
                condition: on-failure
        ports:
            - "27017:27017"
        volumes:
            - ./config/mongodb/subs:/data/db
        networks:
            - webnet

    mongo-credentials:
        image: 'mongo:latest'
        deploy:
            resources:
                limits:
                    cpus: "0.2"
                    memory: 100M
            restart_policy:
                condition: on-failure
        ports:
            - "27018:27017"
        volumes:
            - ./config/mongodb/cred:/data/db
        networks:
            - webnet

    operations-api:
        image: stefantraistaru/subscription-manager:operations-api
        deploy:
            replicas: 2
            resources:
                limits:
                    cpus: "0.2"
                    memory: 100M
            restart_policy:
                condition: on-failure
        ports:
            - '5000:5000'
        depends_on:
            - 'mongo'
        networks:
            - webnet

    login-api:
        image: stefantraistaru/subscription-manager:login-api
        deploy:
            replicas: 2
            resources:
                limits:
                    cpus: "0.2"
                    memory: 100M
            restart_policy:
                condition: on-failure
        ports:
            - '5002:5002'
        depends_on:
            - 'mongo-credentials'
        networks:
            - webnet

    firewall-api:
        image: stefantraistaru/subscription-manager:firewall-api
        deploy:
            replicas: 2
            resources:
                limits:
                    cpus: "0.2"
                    memory: 100M
            restart_policy:
                condition: on-failure
        ports:
            - '5003:5003'
        depends_on:
            - 'login-api'
            - 'operations-api'
        networks:
            - webnet

    # web:
    #     # container_name: 'web'
    #     # build: './web'
    #     image: stefantraistaru/subscription-manager:web
    #     ports:
    #         - '8081:80'
    #         - '8082:4200'
    #     depends_on:
    #         - operations-api
    #     tty: true
    #     links:
    #         - operations-api

    prometheus:
        image: prom/prometheus
        # image: quay.io/prometheus/prometheus:latest
        deploy:
            resources:
                limits:
                    cpus: "0.2"
                    memory: 100M
            restart_policy:
                condition: on-failure
        ports:
            - '9090:9090'
        volumes:
            - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        depends_on:
            - 'firewall-api'
        networks:
            - webnet

    grafana:
        image: grafana/grafana
        user: '1000'
        deploy:
            resources:
                limits:
                    cpus: "0.2"
                    memory: 100M
            restart_policy:
                condition: on-failure
        ports:
            - '3000:3000'
        volumes:
            - ./config/grafana:/var/lib/grafana
        depends_on:
            - 'firewall-api'
        networks:
            - webnet

    visualizer:
        image: dockersamples/visualizer:stable
        ports:
            - '8080:8080'
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
            - webnet

networks:
    webnet: